FORMAT: 1A
HOST: http://private-0b1f3-financialsmicroservice.apiary-mock.com

# Financials Microservice

This is the documentation of the Financials Microservice for the Soaring the Cloud Sequel Showcase.

# Group Invoices Resources
Invoices related resources. Test

## Search and Create Invoices [/invoices{?customer_id,order_id}]

+ Parameters

    + customer_id (string, optional)

        Filter by customer_id

    + order_id (string, optional)

        Filter by order_id

### Search invoices [GET]
Search invoices using criterias like the Customer ID or Order ID

+ Request (text/plain)

    + Headers

            api-key: asdasdsaasd-asdsa-asdas-asdasd-asdasdad

+ Response 200 (application/json;charset=UTF-8)

    + Attributes (array[Invoice])

### Create invoice [POST]
Create a new invoice

+ Request (application/json;charset=UTF-8)

    + Headers

            api-key: asdasdsaasd-asdsa-asdas-asdasd-asdasdad

    + Attributes (Invoice)

+ Response 201 (application/json;charset=UTF-8)

    + Attributes (Response Metadata)

## Manage invoices [/invoices/{invoice_id}]

+ Parameters

    + invoice_id: `I2134354535` (string, required)

        invoice_id of invoice to manage

### Get Invoice [GET]
get a specific invoice by it's Invoice ID

+ Request (text/plain)

    + Headers

            api-key: asdasdsaasd-asdsa-asdas-asdasd-asdasdad

+ Response 200 (application/json;charset=UTF-8)

    + Attributes (Invoice)

### Update invoice [PUT]
Update a specific invoice

+ Request (application/json;charset=UTF-8)

    + Headers

            api-key: asdasdsaasd-asdsa-asdas-asdasd-asdasdad

    + Attributes (Invoice)

+ Response 200 (application/json;charset=UTF-8)

    + Attributes (Response Metadata)

### Delete invoice [DELETE]
Deletes a specific invoice (NOTE: For internal use only! Use carefully!)

+ Request (application/json;charset=UTF-8)

    + Headers

            api-key: asdasdsaasd-asdsa-asdas-asdasd-asdasdad

+ Response 204

# Group Payments Resources
Payment related Resources

## Search and create payments [/payments{?invoice_id,customer_no}]

+ Parameters

    + invoice_id (string, optional)

        Filter for invoice_id

    + customer_no (string, optional)

        Filter for customer_no

### Get payments information [GET]
Get the relevant payment information for an invoice

+ Request (text/plain)

    + Headers

            api-key: asdasdsaasd-asdsa-asdas-asdasd-asdasdad

+ Response 200 (application/json;charset=UTF-8)

    + Attributes (array[Payment])

### Create payment [POST]
Create a new payment

+ Request (application/json;charset=UTF-8)

    + Headers

            api-key: asdasdsaasd-asdsa-asdas-asdasd-asdasdad

    + Attributes (Payment)

+ Response 201 (application/json;charset=UTF-8)

    + Attributes (Response Metadata)

# Group Customer Account Resources
Customer account related Resources

## Search customer account information [/customers/{customer_id}/account]

+ Parameters

    + customer_id: `CGN4711` (string, required)

        customer_id of customer to manage account for

### Get customer account info [GET]

+ Request (text/plain)

    + Headers

            api-key: asdasdsaasd-asdsa-asdas-asdasd-asdasdad

+ Response 200 (application/json;charset=UTF-8)

    + Attributes (CustomerAccount)

# Group Service Operations Resources
Service health related resources

## Health Check [/api/financials/health]

### Get service health state [GET]
Get service health information

+ Response 200 (application/json;charset=UTF-8)

    + Attributes (Health Check Response)

# Data structures

## Health Check Response
- version: `0.1` (number, optional)
- status (enum, required)
  - `OK` (string) - Everything fine with the service
  - `FAILED` (string) - Something is wrong with the service
- uptime: `1234.1` (number) - The uptime of the service in minutes

## Response Metadata
- error: `true` (boolean, required)
- processing_message: `Invoice created successfully!` (string, required)

## Customer
- customer_no: `CGN4711` (string, required)
- first_name: `Sven` (string, required)
- last_name: `Bernhardt` (string, required)
- phone: `+49 211 5093733` (string, optional)
- email: `sven@yourmail.com` (string, required)

## Address (object)
- type (enum, required)
  - `BILLING` (string) - Billing address
  - `DELIVERY` (string) - Delivery
- street_number: `15` (string, required)
- street: `Ludwig-Jahn-Strasse` (string, optional)
- city: `KÃ¶ln` (string, required)
- postcode:  `50858` (string, required)
- country:  `DE` (string, required)

## Invoice Position (object)
- position_id: `1` (number, required)
- amount: `1` (number, required)
- description: `Blue-Ray Box: Game of Thrones Season 7` (string, required)
- product_number: `B073ZKVHFV` (string, required)
- net_price: `20.98` (number, required)
- vat: `19` (number, required)
- gross_price: `24.97` (number, required)

## Invoice (object)
- invoice_id: `I2134354535` (string, required) - System generated Invoice ID
- order_id: `order4711` (string, required)
- order_date: `2018-02-17T21:00:00.000Z` (string, optional)
- shipping_costs: `6.99` (number, required)
- total_price: `31.96` (number, required)
- currency (enum, required)
  - `EUR` (string) - Euros
  - `GBP` (string) - British Pounds
  - `USD` (string) - US Dollars
- invoice_status (enum, required)
  - `OPEN` (string) - Inovice unpaid
  - `PAID` (string) - Invoice paid
  - `CANCEL` (string) - Invoice canceled
- payment_status (enum, required)
  - `PENDING` (string) - Payment still opem
  - `RECEIVED` (string) - Payment received
- customer (Customer, optional)
- addresses (array[Address], optional)
- invoice_positions (array[Invoice Position], optional)
- _id: `12345678908754324567854345675433` (string, optional) - Technical database ID

## Payment (object)
- payment_id: `pay666` (string, optional)
- invoice_id: `I2134354535` (string, required)
- order_id: `order4711` (string, required)
- customer_no: `CGN4711` (string, required)
- payment_type (enum, required)
  - `VISA` - Payment type Credit card VISA
  - `Mastercard` - Payment type Credit card Mastercard
  - `AMEX` - Payment type Credit card AMEX
  - `PayPal` - Payment type Credit card PayPal
  - `Invoice` - Payment type Credit card invoice
- payment_state (enum, required)
  - `PENDING` - Payment still open
  - `APPROVED` - Payment has successfully been processed
- _id: `12345678908754324567854345675433` (string, optional) - Technical database ID

## CustomerAccount (object)
- customer_no: `CGN4711` (string, required)
- first_name: `Sven` (string, required)
- last_name: `Bernhardt` (string, required)
- balance: `-69.99` (number, required)
- currency (enum, required)
  - `EUR` (string) - Euros
  - `GBP` (string) - British Pounds
  - `USD` (string) - US Dollars
- customer_status (enum, required)
  - `FROZEN` (string) - Customers account balance is too high
  - `NORMAL` (string) - Customers account balance is ok
- _id: `12345678908754324567854345675433` (string, optional) - Technical database ID
