/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.soaringclouds.avro.order.v1;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Dimension extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2970922599949700763L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Dimension\",\"namespace\":\"com.soaringclouds.avro.order.v1\",\"fields\":[{\"name\":\"unit\",\"type\":[\"string\",\"null\"]},{\"name\":\"length\",\"type\":[\"double\",\"null\"]},{\"name\":\"height\",\"type\":[\"double\",\"null\"]},{\"name\":\"width\",\"type\":[\"double\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Dimension> ENCODER =
      new BinaryMessageEncoder<Dimension>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Dimension> DECODER =
      new BinaryMessageDecoder<Dimension>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Dimension> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Dimension> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Dimension>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Dimension to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Dimension from a ByteBuffer. */
  public static Dimension fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence unit;
  @Deprecated public java.lang.Double length;
  @Deprecated public java.lang.Double height;
  @Deprecated public java.lang.Double width;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Dimension() {}

  /**
   * All-args constructor.
   * @param unit The new value for unit
   * @param length The new value for length
   * @param height The new value for height
   * @param width The new value for width
   */
  public Dimension(java.lang.CharSequence unit, java.lang.Double length, java.lang.Double height, java.lang.Double width) {
    this.unit = unit;
    this.length = length;
    this.height = height;
    this.width = width;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return unit;
    case 1: return length;
    case 2: return height;
    case 3: return width;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: unit = (java.lang.CharSequence)value$; break;
    case 1: length = (java.lang.Double)value$; break;
    case 2: height = (java.lang.Double)value$; break;
    case 3: width = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'unit' field.
   * @return The value of the 'unit' field.
   */
  public java.lang.CharSequence getUnit() {
    return unit;
  }

  /**
   * Sets the value of the 'unit' field.
   * @param value the value to set.
   */
  public void setUnit(java.lang.CharSequence value) {
    this.unit = value;
  }

  /**
   * Gets the value of the 'length' field.
   * @return The value of the 'length' field.
   */
  public java.lang.Double getLength() {
    return length;
  }

  /**
   * Sets the value of the 'length' field.
   * @param value the value to set.
   */
  public void setLength(java.lang.Double value) {
    this.length = value;
  }

  /**
   * Gets the value of the 'height' field.
   * @return The value of the 'height' field.
   */
  public java.lang.Double getHeight() {
    return height;
  }

  /**
   * Sets the value of the 'height' field.
   * @param value the value to set.
   */
  public void setHeight(java.lang.Double value) {
    this.height = value;
  }

  /**
   * Gets the value of the 'width' field.
   * @return The value of the 'width' field.
   */
  public java.lang.Double getWidth() {
    return width;
  }

  /**
   * Sets the value of the 'width' field.
   * @param value the value to set.
   */
  public void setWidth(java.lang.Double value) {
    this.width = value;
  }

  /**
   * Creates a new Dimension RecordBuilder.
   * @return A new Dimension RecordBuilder
   */
  public static com.soaringclouds.avro.order.v1.Dimension.Builder newBuilder() {
    return new com.soaringclouds.avro.order.v1.Dimension.Builder();
  }

  /**
   * Creates a new Dimension RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Dimension RecordBuilder
   */
  public static com.soaringclouds.avro.order.v1.Dimension.Builder newBuilder(com.soaringclouds.avro.order.v1.Dimension.Builder other) {
    return new com.soaringclouds.avro.order.v1.Dimension.Builder(other);
  }

  /**
   * Creates a new Dimension RecordBuilder by copying an existing Dimension instance.
   * @param other The existing instance to copy.
   * @return A new Dimension RecordBuilder
   */
  public static com.soaringclouds.avro.order.v1.Dimension.Builder newBuilder(com.soaringclouds.avro.order.v1.Dimension other) {
    return new com.soaringclouds.avro.order.v1.Dimension.Builder(other);
  }

  /**
   * RecordBuilder for Dimension instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Dimension>
    implements org.apache.avro.data.RecordBuilder<Dimension> {

    private java.lang.CharSequence unit;
    private java.lang.Double length;
    private java.lang.Double height;
    private java.lang.Double width;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.soaringclouds.avro.order.v1.Dimension.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.unit)) {
        this.unit = data().deepCopy(fields()[0].schema(), other.unit);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.length)) {
        this.length = data().deepCopy(fields()[1].schema(), other.length);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.height)) {
        this.height = data().deepCopy(fields()[2].schema(), other.height);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.width)) {
        this.width = data().deepCopy(fields()[3].schema(), other.width);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Dimension instance
     * @param other The existing instance to copy.
     */
    private Builder(com.soaringclouds.avro.order.v1.Dimension other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.unit)) {
        this.unit = data().deepCopy(fields()[0].schema(), other.unit);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.length)) {
        this.length = data().deepCopy(fields()[1].schema(), other.length);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.height)) {
        this.height = data().deepCopy(fields()[2].schema(), other.height);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.width)) {
        this.width = data().deepCopy(fields()[3].schema(), other.width);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'unit' field.
      * @return The value.
      */
    public java.lang.CharSequence getUnit() {
      return unit;
    }

    /**
      * Sets the value of the 'unit' field.
      * @param value The value of 'unit'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Dimension.Builder setUnit(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.unit = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'unit' field has been set.
      * @return True if the 'unit' field has been set, false otherwise.
      */
    public boolean hasUnit() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'unit' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Dimension.Builder clearUnit() {
      unit = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'length' field.
      * @return The value.
      */
    public java.lang.Double getLength() {
      return length;
    }

    /**
      * Sets the value of the 'length' field.
      * @param value The value of 'length'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Dimension.Builder setLength(java.lang.Double value) {
      validate(fields()[1], value);
      this.length = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'length' field has been set.
      * @return True if the 'length' field has been set, false otherwise.
      */
    public boolean hasLength() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'length' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Dimension.Builder clearLength() {
      length = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'height' field.
      * @return The value.
      */
    public java.lang.Double getHeight() {
      return height;
    }

    /**
      * Sets the value of the 'height' field.
      * @param value The value of 'height'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Dimension.Builder setHeight(java.lang.Double value) {
      validate(fields()[2], value);
      this.height = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'height' field has been set.
      * @return True if the 'height' field has been set, false otherwise.
      */
    public boolean hasHeight() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'height' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Dimension.Builder clearHeight() {
      height = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'width' field.
      * @return The value.
      */
    public java.lang.Double getWidth() {
      return width;
    }

    /**
      * Sets the value of the 'width' field.
      * @param value The value of 'width'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Dimension.Builder setWidth(java.lang.Double value) {
      validate(fields()[3], value);
      this.width = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'width' field has been set.
      * @return True if the 'width' field has been set, false otherwise.
      */
    public boolean hasWidth() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'width' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Dimension.Builder clearWidth() {
      width = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Dimension build() {
      try {
        Dimension record = new Dimension();
        record.unit = fieldSetFlags()[0] ? this.unit : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.length = fieldSetFlags()[1] ? this.length : (java.lang.Double) defaultValue(fields()[1]);
        record.height = fieldSetFlags()[2] ? this.height : (java.lang.Double) defaultValue(fields()[2]);
        record.width = fieldSetFlags()[3] ? this.width : (java.lang.Double) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Dimension>
    WRITER$ = (org.apache.avro.io.DatumWriter<Dimension>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Dimension>
    READER$ = (org.apache.avro.io.DatumReader<Dimension>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
