/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.soaringclouds.avro.order.v1;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** the order schema */
@org.apache.avro.specific.AvroGenerated
public class Order extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2563367996639088396L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Order\",\"namespace\":\"com.soaringclouds.avro.order.v1\",\"doc\":\"the order schema\",\"fields\":[{\"name\":\"orderId\",\"type\":\"string\",\"doc\":\"System generated Order ID\"},{\"name\":\"shoppingCartId\",\"type\":\"string\",\"doc\":\"ID for the shopping cart. Should be a combination of user Id + timestamp \\n    of the first item added to the cart.\"},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"OrderStatusEnum\",\"doc\":\"Valid order statuses\",\"symbols\":[\"SHOPPING_CART\",\"PROCESSING\",\"SUCCESS\",\"DELIVERING\",\"DELIVERED\",\"CANCELED\"]}},{\"name\":\"createdAt\",\"type\":\"string\"},{\"name\":\"updatedAt\",\"type\":\"string\"},{\"name\":\"totalPrice\",\"type\":\"double\"},{\"name\":\"discount\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":{\"type\":\"enum\",\"name\":\"CurrencyEnum\",\"doc\":\"Valid currencies\",\"symbols\":[\"USD\",\"GBP\",\"EUR\"]},\"doc\":\"the currency used\"},{\"name\":\"payment\",\"type\":{\"type\":\"record\",\"name\":\"OrderPayment\",\"fields\":[{\"name\":\"cardType\",\"type\":{\"type\":\"enum\",\"name\":\"CardTypeEnum\",\"doc\":\"Credit Card payment methods\",\"symbols\":[\"VISA_CREDIT\",\"VISA_DEBIT\",\"MASTER_CREDIT\",\"MASTER_DEBIT\",\"AMEX_CREDIT\"]},\"doc\":\"Credit card payment methods supported\"},{\"name\":\"cardNumber\",\"type\":[\"string\",\"null\"]},{\"name\":\"startYear\",\"type\":[\"int\",\"null\"]},{\"name\":\"startMonth\",\"type\":[\"int\",\"null\"]},{\"name\":\"expiryYear\",\"type\":[\"int\",\"null\"]},{\"name\":\"expiryMonth\",\"type\":[\"int\",\"null\"]}]},\"doc\":\"\"},{\"name\":\"customer\",\"type\":{\"type\":\"record\",\"name\":\"Customer\",\"fields\":[{\"name\":\"customerId\",\"type\":[\"string\",\"null\"]},{\"name\":\"loyaltyLevel\",\"type\":{\"type\":\"enum\",\"name\":\"loyaltyLevelEnum\",\"doc\":\"Loyalty level of the IF customer has a Loyalty Account\",\"symbols\":[\"NONE\",\"BRONZE\",\"SILVER\",\"GOLD\"]}},{\"name\":\"firstName\",\"type\":[\"string\",\"null\"]},{\"name\":\"lastName\",\"type\":[\"string\",\"null\"]},{\"name\":\"phone\",\"type\":[\"string\",\"null\"]},{\"name\":\"email\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"addresses\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Address\",\"fields\":[{\"name\":\"name\",\"type\":[\"string\",\"null\"]},{\"name\":\"line1\",\"type\":[\"string\",\"null\"]},{\"name\":\"line2\",\"type\":[\"string\",\"null\"]},{\"name\":\"city\",\"type\":[\"string\",\"null\"]},{\"name\":\"county\",\"type\":[\"string\",\"null\"]},{\"name\":\"postcode\",\"type\":[\"string\",\"null\"]},{\"name\":\"country\",\"type\":[\"string\",\"null\"]}]}}],\"doc\":\"a collection of addresses\"},{\"name\":\"shipping\",\"type\":{\"type\":\"record\",\"name\":\"Shipping\",\"fields\":[{\"name\":\"firstName\",\"type\":[\"string\",\"null\"]},{\"name\":\"lastName\",\"type\":[\"string\",\"null\"]},{\"name\":\"shippingMethod\",\"type\":{\"type\":\"enum\",\"name\":\"shippingMethodEnum\",\"doc\":\"Shipping methods supported\",\"symbols\":[\"ECONOMY\",\"PREMIUM\"]}},{\"name\":\"price\",\"type\":[\"double\",\"null\"]},{\"name\":\"ETA\",\"type\":\"string\"}]}},{\"name\":\"specialDetails\",\"type\":{\"type\":\"record\",\"name\":\"specialDetails\",\"fields\":[{\"name\":\"personalMessage\",\"type\":[\"string\",\"null\"]},{\"name\":\"giftWrapping\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"deliveryNotes\",\"type\":[\"string\",\"null\"]}]}},{\"name\":\"items\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Item\",\"fields\":[{\"name\":\"productId\",\"type\":[\"string\",\"null\"]},{\"name\":\"productCode\",\"type\":[\"string\",\"null\"]},{\"name\":\"productName\",\"type\":[\"string\",\"null\"]},{\"name\":\"description\",\"type\":[\"string\",\"null\"]},{\"name\":\"quantity\",\"type\":[\"int\",\"null\"]},{\"name\":\"price\",\"type\":[\"double\",\"null\"]},{\"name\":\"size\",\"type\":[\"int\",\"null\"]},{\"name\":\"weight\",\"type\":[\"double\",\"null\"]},{\"name\":\"dimension\",\"type\":{\"type\":\"record\",\"name\":\"Dimension\",\"fields\":[{\"name\":\"unit\",\"type\":[\"string\",\"null\"]},{\"name\":\"length\",\"type\":[\"double\",\"null\"]},{\"name\":\"height\",\"type\":[\"double\",\"null\"]},{\"name\":\"width\",\"type\":[\"double\",\"null\"]}]}},{\"name\":\"color\",\"type\":[\"string\",\"null\"]},{\"name\":\"sku\",\"type\":[\"string\",\"null\"]}]}}],\"doc\":\"collection of items ordered\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Order> ENCODER =
      new BinaryMessageEncoder<Order>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Order> DECODER =
      new BinaryMessageDecoder<Order>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Order> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Order> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Order>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Order to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Order from a ByteBuffer. */
  public static Order fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** System generated Order ID */
  @Deprecated public java.lang.CharSequence orderId;
  /** ID for the shopping cart. Should be a combination of user Id + timestamp 
    of the first item added to the cart. */
  @Deprecated public java.lang.CharSequence shoppingCartId;
  @Deprecated public com.soaringclouds.avro.order.v1.OrderStatusEnum status;
  @Deprecated public java.lang.CharSequence createdAt;
  @Deprecated public java.lang.CharSequence updatedAt;
  @Deprecated public double totalPrice;
  @Deprecated public int discount;
  /** the currency used */
  @Deprecated public com.soaringclouds.avro.order.v1.CurrencyEnum currency;
  /**  */
  @Deprecated public com.soaringclouds.avro.order.v1.OrderPayment payment;
  @Deprecated public com.soaringclouds.avro.order.v1.Customer customer;
  /** a collection of addresses */
  @Deprecated public java.util.List<com.soaringclouds.avro.order.v1.Address> addresses;
  @Deprecated public com.soaringclouds.avro.order.v1.Shipping shipping;
  @Deprecated public com.soaringclouds.avro.order.v1.specialDetails specialDetails;
  /** collection of items ordered */
  @Deprecated public java.util.List<com.soaringclouds.avro.order.v1.Item> items;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Order() {}

  /**
   * All-args constructor.
   * @param orderId System generated Order ID
   * @param shoppingCartId ID for the shopping cart. Should be a combination of user Id + timestamp 
    of the first item added to the cart.
   * @param status The new value for status
   * @param createdAt The new value for createdAt
   * @param updatedAt The new value for updatedAt
   * @param totalPrice The new value for totalPrice
   * @param discount The new value for discount
   * @param currency the currency used
   * @param payment 
   * @param customer The new value for customer
   * @param addresses a collection of addresses
   * @param shipping The new value for shipping
   * @param specialDetails The new value for specialDetails
   * @param items collection of items ordered
   */
  public Order(java.lang.CharSequence orderId, java.lang.CharSequence shoppingCartId, com.soaringclouds.avro.order.v1.OrderStatusEnum status, java.lang.CharSequence createdAt, java.lang.CharSequence updatedAt, java.lang.Double totalPrice, java.lang.Integer discount, com.soaringclouds.avro.order.v1.CurrencyEnum currency, com.soaringclouds.avro.order.v1.OrderPayment payment, com.soaringclouds.avro.order.v1.Customer customer, java.util.List<com.soaringclouds.avro.order.v1.Address> addresses, com.soaringclouds.avro.order.v1.Shipping shipping, com.soaringclouds.avro.order.v1.specialDetails specialDetails, java.util.List<com.soaringclouds.avro.order.v1.Item> items) {
    this.orderId = orderId;
    this.shoppingCartId = shoppingCartId;
    this.status = status;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.totalPrice = totalPrice;
    this.discount = discount;
    this.currency = currency;
    this.payment = payment;
    this.customer = customer;
    this.addresses = addresses;
    this.shipping = shipping;
    this.specialDetails = specialDetails;
    this.items = items;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return orderId;
    case 1: return shoppingCartId;
    case 2: return status;
    case 3: return createdAt;
    case 4: return updatedAt;
    case 5: return totalPrice;
    case 6: return discount;
    case 7: return currency;
    case 8: return payment;
    case 9: return customer;
    case 10: return addresses;
    case 11: return shipping;
    case 12: return specialDetails;
    case 13: return items;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: orderId = (java.lang.CharSequence)value$; break;
    case 1: shoppingCartId = (java.lang.CharSequence)value$; break;
    case 2: status = (com.soaringclouds.avro.order.v1.OrderStatusEnum)value$; break;
    case 3: createdAt = (java.lang.CharSequence)value$; break;
    case 4: updatedAt = (java.lang.CharSequence)value$; break;
    case 5: totalPrice = (java.lang.Double)value$; break;
    case 6: discount = (java.lang.Integer)value$; break;
    case 7: currency = (com.soaringclouds.avro.order.v1.CurrencyEnum)value$; break;
    case 8: payment = (com.soaringclouds.avro.order.v1.OrderPayment)value$; break;
    case 9: customer = (com.soaringclouds.avro.order.v1.Customer)value$; break;
    case 10: addresses = (java.util.List<com.soaringclouds.avro.order.v1.Address>)value$; break;
    case 11: shipping = (com.soaringclouds.avro.order.v1.Shipping)value$; break;
    case 12: specialDetails = (com.soaringclouds.avro.order.v1.specialDetails)value$; break;
    case 13: items = (java.util.List<com.soaringclouds.avro.order.v1.Item>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'orderId' field.
   * @return System generated Order ID
   */
  public java.lang.CharSequence getOrderId() {
    return orderId;
  }

  /**
   * Sets the value of the 'orderId' field.
   * System generated Order ID
   * @param value the value to set.
   */
  public void setOrderId(java.lang.CharSequence value) {
    this.orderId = value;
  }

  /**
   * Gets the value of the 'shoppingCartId' field.
   * @return ID for the shopping cart. Should be a combination of user Id + timestamp 
    of the first item added to the cart.
   */
  public java.lang.CharSequence getShoppingCartId() {
    return shoppingCartId;
  }

  /**
   * Sets the value of the 'shoppingCartId' field.
   * ID for the shopping cart. Should be a combination of user Id + timestamp 
    of the first item added to the cart.
   * @param value the value to set.
   */
  public void setShoppingCartId(java.lang.CharSequence value) {
    this.shoppingCartId = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public com.soaringclouds.avro.order.v1.OrderStatusEnum getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(com.soaringclouds.avro.order.v1.OrderStatusEnum value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.lang.CharSequence getCreatedAt() {
    return createdAt;
  }

  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.lang.CharSequence value) {
    this.createdAt = value;
  }

  /**
   * Gets the value of the 'updatedAt' field.
   * @return The value of the 'updatedAt' field.
   */
  public java.lang.CharSequence getUpdatedAt() {
    return updatedAt;
  }

  /**
   * Sets the value of the 'updatedAt' field.
   * @param value the value to set.
   */
  public void setUpdatedAt(java.lang.CharSequence value) {
    this.updatedAt = value;
  }

  /**
   * Gets the value of the 'totalPrice' field.
   * @return The value of the 'totalPrice' field.
   */
  public java.lang.Double getTotalPrice() {
    return totalPrice;
  }

  /**
   * Sets the value of the 'totalPrice' field.
   * @param value the value to set.
   */
  public void setTotalPrice(java.lang.Double value) {
    this.totalPrice = value;
  }

  /**
   * Gets the value of the 'discount' field.
   * @return The value of the 'discount' field.
   */
  public java.lang.Integer getDiscount() {
    return discount;
  }

  /**
   * Sets the value of the 'discount' field.
   * @param value the value to set.
   */
  public void setDiscount(java.lang.Integer value) {
    this.discount = value;
  }

  /**
   * Gets the value of the 'currency' field.
   * @return the currency used
   */
  public com.soaringclouds.avro.order.v1.CurrencyEnum getCurrency() {
    return currency;
  }

  /**
   * Sets the value of the 'currency' field.
   * the currency used
   * @param value the value to set.
   */
  public void setCurrency(com.soaringclouds.avro.order.v1.CurrencyEnum value) {
    this.currency = value;
  }

  /**
   * Gets the value of the 'payment' field.
   * @return 
   */
  public com.soaringclouds.avro.order.v1.OrderPayment getPayment() {
    return payment;
  }

  /**
   * Sets the value of the 'payment' field.
   * 
   * @param value the value to set.
   */
  public void setPayment(com.soaringclouds.avro.order.v1.OrderPayment value) {
    this.payment = value;
  }

  /**
   * Gets the value of the 'customer' field.
   * @return The value of the 'customer' field.
   */
  public com.soaringclouds.avro.order.v1.Customer getCustomer() {
    return customer;
  }

  /**
   * Sets the value of the 'customer' field.
   * @param value the value to set.
   */
  public void setCustomer(com.soaringclouds.avro.order.v1.Customer value) {
    this.customer = value;
  }

  /**
   * Gets the value of the 'addresses' field.
   * @return a collection of addresses
   */
  public java.util.List<com.soaringclouds.avro.order.v1.Address> getAddresses() {
    return addresses;
  }

  /**
   * Sets the value of the 'addresses' field.
   * a collection of addresses
   * @param value the value to set.
   */
  public void setAddresses(java.util.List<com.soaringclouds.avro.order.v1.Address> value) {
    this.addresses = value;
  }

  /**
   * Gets the value of the 'shipping' field.
   * @return The value of the 'shipping' field.
   */
  public com.soaringclouds.avro.order.v1.Shipping getShipping() {
    return shipping;
  }

  /**
   * Sets the value of the 'shipping' field.
   * @param value the value to set.
   */
  public void setShipping(com.soaringclouds.avro.order.v1.Shipping value) {
    this.shipping = value;
  }

  /**
   * Gets the value of the 'specialDetails' field.
   * @return The value of the 'specialDetails' field.
   */
  public com.soaringclouds.avro.order.v1.specialDetails getSpecialDetails() {
    return specialDetails;
  }

  /**
   * Sets the value of the 'specialDetails' field.
   * @param value the value to set.
   */
  public void setSpecialDetails(com.soaringclouds.avro.order.v1.specialDetails value) {
    this.specialDetails = value;
  }

  /**
   * Gets the value of the 'items' field.
   * @return collection of items ordered
   */
  public java.util.List<com.soaringclouds.avro.order.v1.Item> getItems() {
    return items;
  }

  /**
   * Sets the value of the 'items' field.
   * collection of items ordered
   * @param value the value to set.
   */
  public void setItems(java.util.List<com.soaringclouds.avro.order.v1.Item> value) {
    this.items = value;
  }

  /**
   * Creates a new Order RecordBuilder.
   * @return A new Order RecordBuilder
   */
  public static com.soaringclouds.avro.order.v1.Order.Builder newBuilder() {
    return new com.soaringclouds.avro.order.v1.Order.Builder();
  }

  /**
   * Creates a new Order RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Order RecordBuilder
   */
  public static com.soaringclouds.avro.order.v1.Order.Builder newBuilder(com.soaringclouds.avro.order.v1.Order.Builder other) {
    return new com.soaringclouds.avro.order.v1.Order.Builder(other);
  }

  /**
   * Creates a new Order RecordBuilder by copying an existing Order instance.
   * @param other The existing instance to copy.
   * @return A new Order RecordBuilder
   */
  public static com.soaringclouds.avro.order.v1.Order.Builder newBuilder(com.soaringclouds.avro.order.v1.Order other) {
    return new com.soaringclouds.avro.order.v1.Order.Builder(other);
  }

  /**
   * RecordBuilder for Order instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Order>
    implements org.apache.avro.data.RecordBuilder<Order> {

    /** System generated Order ID */
    private java.lang.CharSequence orderId;
    /** ID for the shopping cart. Should be a combination of user Id + timestamp 
    of the first item added to the cart. */
    private java.lang.CharSequence shoppingCartId;
    private com.soaringclouds.avro.order.v1.OrderStatusEnum status;
    private java.lang.CharSequence createdAt;
    private java.lang.CharSequence updatedAt;
    private double totalPrice;
    private int discount;
    /** the currency used */
    private com.soaringclouds.avro.order.v1.CurrencyEnum currency;
    /**  */
    private com.soaringclouds.avro.order.v1.OrderPayment payment;
    private com.soaringclouds.avro.order.v1.OrderPayment.Builder paymentBuilder;
    private com.soaringclouds.avro.order.v1.Customer customer;
    private com.soaringclouds.avro.order.v1.Customer.Builder customerBuilder;
    /** a collection of addresses */
    private java.util.List<com.soaringclouds.avro.order.v1.Address> addresses;
    private com.soaringclouds.avro.order.v1.Shipping shipping;
    private com.soaringclouds.avro.order.v1.Shipping.Builder shippingBuilder;
    private com.soaringclouds.avro.order.v1.specialDetails specialDetails;
    private com.soaringclouds.avro.order.v1.specialDetails.Builder specialDetailsBuilder;
    /** collection of items ordered */
    private java.util.List<com.soaringclouds.avro.order.v1.Item> items;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.soaringclouds.avro.order.v1.Order.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.orderId)) {
        this.orderId = data().deepCopy(fields()[0].schema(), other.orderId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.shoppingCartId)) {
        this.shoppingCartId = data().deepCopy(fields()[1].schema(), other.shoppingCartId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.status)) {
        this.status = data().deepCopy(fields()[2].schema(), other.status);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[3].schema(), other.createdAt);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.updatedAt)) {
        this.updatedAt = data().deepCopy(fields()[4].schema(), other.updatedAt);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.totalPrice)) {
        this.totalPrice = data().deepCopy(fields()[5].schema(), other.totalPrice);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.discount)) {
        this.discount = data().deepCopy(fields()[6].schema(), other.discount);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.currency)) {
        this.currency = data().deepCopy(fields()[7].schema(), other.currency);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.payment)) {
        this.payment = data().deepCopy(fields()[8].schema(), other.payment);
        fieldSetFlags()[8] = true;
      }
      if (other.hasPaymentBuilder()) {
        this.paymentBuilder = com.soaringclouds.avro.order.v1.OrderPayment.newBuilder(other.getPaymentBuilder());
      }
      if (isValidValue(fields()[9], other.customer)) {
        this.customer = data().deepCopy(fields()[9].schema(), other.customer);
        fieldSetFlags()[9] = true;
      }
      if (other.hasCustomerBuilder()) {
        this.customerBuilder = com.soaringclouds.avro.order.v1.Customer.newBuilder(other.getCustomerBuilder());
      }
      if (isValidValue(fields()[10], other.addresses)) {
        this.addresses = data().deepCopy(fields()[10].schema(), other.addresses);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.shipping)) {
        this.shipping = data().deepCopy(fields()[11].schema(), other.shipping);
        fieldSetFlags()[11] = true;
      }
      if (other.hasShippingBuilder()) {
        this.shippingBuilder = com.soaringclouds.avro.order.v1.Shipping.newBuilder(other.getShippingBuilder());
      }
      if (isValidValue(fields()[12], other.specialDetails)) {
        this.specialDetails = data().deepCopy(fields()[12].schema(), other.specialDetails);
        fieldSetFlags()[12] = true;
      }
      if (other.hasSpecialDetailsBuilder()) {
        this.specialDetailsBuilder = com.soaringclouds.avro.order.v1.specialDetails.newBuilder(other.getSpecialDetailsBuilder());
      }
      if (isValidValue(fields()[13], other.items)) {
        this.items = data().deepCopy(fields()[13].schema(), other.items);
        fieldSetFlags()[13] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Order instance
     * @param other The existing instance to copy.
     */
    private Builder(com.soaringclouds.avro.order.v1.Order other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.orderId)) {
        this.orderId = data().deepCopy(fields()[0].schema(), other.orderId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.shoppingCartId)) {
        this.shoppingCartId = data().deepCopy(fields()[1].schema(), other.shoppingCartId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.status)) {
        this.status = data().deepCopy(fields()[2].schema(), other.status);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[3].schema(), other.createdAt);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.updatedAt)) {
        this.updatedAt = data().deepCopy(fields()[4].schema(), other.updatedAt);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.totalPrice)) {
        this.totalPrice = data().deepCopy(fields()[5].schema(), other.totalPrice);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.discount)) {
        this.discount = data().deepCopy(fields()[6].schema(), other.discount);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.currency)) {
        this.currency = data().deepCopy(fields()[7].schema(), other.currency);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.payment)) {
        this.payment = data().deepCopy(fields()[8].schema(), other.payment);
        fieldSetFlags()[8] = true;
      }
      this.paymentBuilder = null;
      if (isValidValue(fields()[9], other.customer)) {
        this.customer = data().deepCopy(fields()[9].schema(), other.customer);
        fieldSetFlags()[9] = true;
      }
      this.customerBuilder = null;
      if (isValidValue(fields()[10], other.addresses)) {
        this.addresses = data().deepCopy(fields()[10].schema(), other.addresses);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.shipping)) {
        this.shipping = data().deepCopy(fields()[11].schema(), other.shipping);
        fieldSetFlags()[11] = true;
      }
      this.shippingBuilder = null;
      if (isValidValue(fields()[12], other.specialDetails)) {
        this.specialDetails = data().deepCopy(fields()[12].schema(), other.specialDetails);
        fieldSetFlags()[12] = true;
      }
      this.specialDetailsBuilder = null;
      if (isValidValue(fields()[13], other.items)) {
        this.items = data().deepCopy(fields()[13].schema(), other.items);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'orderId' field.
      * System generated Order ID
      * @return The value.
      */
    public java.lang.CharSequence getOrderId() {
      return orderId;
    }

    /**
      * Sets the value of the 'orderId' field.
      * System generated Order ID
      * @param value The value of 'orderId'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder setOrderId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.orderId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'orderId' field has been set.
      * System generated Order ID
      * @return True if the 'orderId' field has been set, false otherwise.
      */
    public boolean hasOrderId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'orderId' field.
      * System generated Order ID
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder clearOrderId() {
      orderId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'shoppingCartId' field.
      * ID for the shopping cart. Should be a combination of user Id + timestamp 
    of the first item added to the cart.
      * @return The value.
      */
    public java.lang.CharSequence getShoppingCartId() {
      return shoppingCartId;
    }

    /**
      * Sets the value of the 'shoppingCartId' field.
      * ID for the shopping cart. Should be a combination of user Id + timestamp 
    of the first item added to the cart.
      * @param value The value of 'shoppingCartId'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder setShoppingCartId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.shoppingCartId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'shoppingCartId' field has been set.
      * ID for the shopping cart. Should be a combination of user Id + timestamp 
    of the first item added to the cart.
      * @return True if the 'shoppingCartId' field has been set, false otherwise.
      */
    public boolean hasShoppingCartId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'shoppingCartId' field.
      * ID for the shopping cart. Should be a combination of user Id + timestamp 
    of the first item added to the cart.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder clearShoppingCartId() {
      shoppingCartId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public com.soaringclouds.avro.order.v1.OrderStatusEnum getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder setStatus(com.soaringclouds.avro.order.v1.OrderStatusEnum value) {
      validate(fields()[2], value);
      this.status = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder clearStatus() {
      status = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreatedAt() {
      return createdAt;
    }

    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder setCreatedAt(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.createdAt = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder clearCreatedAt() {
      createdAt = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'updatedAt' field.
      * @return The value.
      */
    public java.lang.CharSequence getUpdatedAt() {
      return updatedAt;
    }

    /**
      * Sets the value of the 'updatedAt' field.
      * @param value The value of 'updatedAt'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder setUpdatedAt(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.updatedAt = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'updatedAt' field has been set.
      * @return True if the 'updatedAt' field has been set, false otherwise.
      */
    public boolean hasUpdatedAt() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'updatedAt' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder clearUpdatedAt() {
      updatedAt = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalPrice' field.
      * @return The value.
      */
    public java.lang.Double getTotalPrice() {
      return totalPrice;
    }

    /**
      * Sets the value of the 'totalPrice' field.
      * @param value The value of 'totalPrice'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder setTotalPrice(double value) {
      validate(fields()[5], value);
      this.totalPrice = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'totalPrice' field has been set.
      * @return True if the 'totalPrice' field has been set, false otherwise.
      */
    public boolean hasTotalPrice() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'totalPrice' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder clearTotalPrice() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'discount' field.
      * @return The value.
      */
    public java.lang.Integer getDiscount() {
      return discount;
    }

    /**
      * Sets the value of the 'discount' field.
      * @param value The value of 'discount'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder setDiscount(int value) {
      validate(fields()[6], value);
      this.discount = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'discount' field has been set.
      * @return True if the 'discount' field has been set, false otherwise.
      */
    public boolean hasDiscount() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'discount' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder clearDiscount() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'currency' field.
      * the currency used
      * @return The value.
      */
    public com.soaringclouds.avro.order.v1.CurrencyEnum getCurrency() {
      return currency;
    }

    /**
      * Sets the value of the 'currency' field.
      * the currency used
      * @param value The value of 'currency'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder setCurrency(com.soaringclouds.avro.order.v1.CurrencyEnum value) {
      validate(fields()[7], value);
      this.currency = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'currency' field has been set.
      * the currency used
      * @return True if the 'currency' field has been set, false otherwise.
      */
    public boolean hasCurrency() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'currency' field.
      * the currency used
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder clearCurrency() {
      currency = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'payment' field.
      * 
      * @return The value.
      */
    public com.soaringclouds.avro.order.v1.OrderPayment getPayment() {
      return payment;
    }

    /**
      * Sets the value of the 'payment' field.
      * 
      * @param value The value of 'payment'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder setPayment(com.soaringclouds.avro.order.v1.OrderPayment value) {
      validate(fields()[8], value);
      this.paymentBuilder = null;
      this.payment = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'payment' field has been set.
      * 
      * @return True if the 'payment' field has been set, false otherwise.
      */
    public boolean hasPayment() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'payment' field and creates one if it doesn't exist yet.
     * 
     * @return This builder.
     */
    public com.soaringclouds.avro.order.v1.OrderPayment.Builder getPaymentBuilder() {
      if (paymentBuilder == null) {
        if (hasPayment()) {
          setPaymentBuilder(com.soaringclouds.avro.order.v1.OrderPayment.newBuilder(payment));
        } else {
          setPaymentBuilder(com.soaringclouds.avro.order.v1.OrderPayment.newBuilder());
        }
      }
      return paymentBuilder;
    }

    /**
     * Sets the Builder instance for the 'payment' field
     * 
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.soaringclouds.avro.order.v1.Order.Builder setPaymentBuilder(com.soaringclouds.avro.order.v1.OrderPayment.Builder value) {
      clearPayment();
      paymentBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'payment' field has an active Builder instance
     * 
     * @return True if the 'payment' field has an active Builder instance
     */
    public boolean hasPaymentBuilder() {
      return paymentBuilder != null;
    }

    /**
      * Clears the value of the 'payment' field.
      * 
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder clearPayment() {
      payment = null;
      paymentBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'customer' field.
      * @return The value.
      */
    public com.soaringclouds.avro.order.v1.Customer getCustomer() {
      return customer;
    }

    /**
      * Sets the value of the 'customer' field.
      * @param value The value of 'customer'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder setCustomer(com.soaringclouds.avro.order.v1.Customer value) {
      validate(fields()[9], value);
      this.customerBuilder = null;
      this.customer = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'customer' field has been set.
      * @return True if the 'customer' field has been set, false otherwise.
      */
    public boolean hasCustomer() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'customer' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.soaringclouds.avro.order.v1.Customer.Builder getCustomerBuilder() {
      if (customerBuilder == null) {
        if (hasCustomer()) {
          setCustomerBuilder(com.soaringclouds.avro.order.v1.Customer.newBuilder(customer));
        } else {
          setCustomerBuilder(com.soaringclouds.avro.order.v1.Customer.newBuilder());
        }
      }
      return customerBuilder;
    }

    /**
     * Sets the Builder instance for the 'customer' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.soaringclouds.avro.order.v1.Order.Builder setCustomerBuilder(com.soaringclouds.avro.order.v1.Customer.Builder value) {
      clearCustomer();
      customerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'customer' field has an active Builder instance
     * @return True if the 'customer' field has an active Builder instance
     */
    public boolean hasCustomerBuilder() {
      return customerBuilder != null;
    }

    /**
      * Clears the value of the 'customer' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder clearCustomer() {
      customer = null;
      customerBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'addresses' field.
      * a collection of addresses
      * @return The value.
      */
    public java.util.List<com.soaringclouds.avro.order.v1.Address> getAddresses() {
      return addresses;
    }

    /**
      * Sets the value of the 'addresses' field.
      * a collection of addresses
      * @param value The value of 'addresses'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder setAddresses(java.util.List<com.soaringclouds.avro.order.v1.Address> value) {
      validate(fields()[10], value);
      this.addresses = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'addresses' field has been set.
      * a collection of addresses
      * @return True if the 'addresses' field has been set, false otherwise.
      */
    public boolean hasAddresses() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'addresses' field.
      * a collection of addresses
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder clearAddresses() {
      addresses = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'shipping' field.
      * @return The value.
      */
    public com.soaringclouds.avro.order.v1.Shipping getShipping() {
      return shipping;
    }

    /**
      * Sets the value of the 'shipping' field.
      * @param value The value of 'shipping'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder setShipping(com.soaringclouds.avro.order.v1.Shipping value) {
      validate(fields()[11], value);
      this.shippingBuilder = null;
      this.shipping = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'shipping' field has been set.
      * @return True if the 'shipping' field has been set, false otherwise.
      */
    public boolean hasShipping() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'shipping' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.soaringclouds.avro.order.v1.Shipping.Builder getShippingBuilder() {
      if (shippingBuilder == null) {
        if (hasShipping()) {
          setShippingBuilder(com.soaringclouds.avro.order.v1.Shipping.newBuilder(shipping));
        } else {
          setShippingBuilder(com.soaringclouds.avro.order.v1.Shipping.newBuilder());
        }
      }
      return shippingBuilder;
    }

    /**
     * Sets the Builder instance for the 'shipping' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.soaringclouds.avro.order.v1.Order.Builder setShippingBuilder(com.soaringclouds.avro.order.v1.Shipping.Builder value) {
      clearShipping();
      shippingBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'shipping' field has an active Builder instance
     * @return True if the 'shipping' field has an active Builder instance
     */
    public boolean hasShippingBuilder() {
      return shippingBuilder != null;
    }

    /**
      * Clears the value of the 'shipping' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder clearShipping() {
      shipping = null;
      shippingBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'specialDetails' field.
      * @return The value.
      */
    public com.soaringclouds.avro.order.v1.specialDetails getSpecialDetails() {
      return specialDetails;
    }

    /**
      * Sets the value of the 'specialDetails' field.
      * @param value The value of 'specialDetails'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder setSpecialDetails(com.soaringclouds.avro.order.v1.specialDetails value) {
      validate(fields()[12], value);
      this.specialDetailsBuilder = null;
      this.specialDetails = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'specialDetails' field has been set.
      * @return True if the 'specialDetails' field has been set, false otherwise.
      */
    public boolean hasSpecialDetails() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'specialDetails' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.soaringclouds.avro.order.v1.specialDetails.Builder getSpecialDetailsBuilder() {
      if (specialDetailsBuilder == null) {
        if (hasSpecialDetails()) {
          setSpecialDetailsBuilder(com.soaringclouds.avro.order.v1.specialDetails.newBuilder(specialDetails));
        } else {
          setSpecialDetailsBuilder(com.soaringclouds.avro.order.v1.specialDetails.newBuilder());
        }
      }
      return specialDetailsBuilder;
    }

    /**
     * Sets the Builder instance for the 'specialDetails' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.soaringclouds.avro.order.v1.Order.Builder setSpecialDetailsBuilder(com.soaringclouds.avro.order.v1.specialDetails.Builder value) {
      clearSpecialDetails();
      specialDetailsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'specialDetails' field has an active Builder instance
     * @return True if the 'specialDetails' field has an active Builder instance
     */
    public boolean hasSpecialDetailsBuilder() {
      return specialDetailsBuilder != null;
    }

    /**
      * Clears the value of the 'specialDetails' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder clearSpecialDetails() {
      specialDetails = null;
      specialDetailsBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'items' field.
      * collection of items ordered
      * @return The value.
      */
    public java.util.List<com.soaringclouds.avro.order.v1.Item> getItems() {
      return items;
    }

    /**
      * Sets the value of the 'items' field.
      * collection of items ordered
      * @param value The value of 'items'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder setItems(java.util.List<com.soaringclouds.avro.order.v1.Item> value) {
      validate(fields()[13], value);
      this.items = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'items' field has been set.
      * collection of items ordered
      * @return True if the 'items' field has been set, false otherwise.
      */
    public boolean hasItems() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'items' field.
      * collection of items ordered
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Order.Builder clearItems() {
      items = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Order build() {
      try {
        Order record = new Order();
        record.orderId = fieldSetFlags()[0] ? this.orderId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.shoppingCartId = fieldSetFlags()[1] ? this.shoppingCartId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.status = fieldSetFlags()[2] ? this.status : (com.soaringclouds.avro.order.v1.OrderStatusEnum) defaultValue(fields()[2]);
        record.createdAt = fieldSetFlags()[3] ? this.createdAt : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.updatedAt = fieldSetFlags()[4] ? this.updatedAt : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.totalPrice = fieldSetFlags()[5] ? this.totalPrice : (java.lang.Double) defaultValue(fields()[5]);
        record.discount = fieldSetFlags()[6] ? this.discount : (java.lang.Integer) defaultValue(fields()[6]);
        record.currency = fieldSetFlags()[7] ? this.currency : (com.soaringclouds.avro.order.v1.CurrencyEnum) defaultValue(fields()[7]);
        if (paymentBuilder != null) {
          record.payment = this.paymentBuilder.build();
        } else {
          record.payment = fieldSetFlags()[8] ? this.payment : (com.soaringclouds.avro.order.v1.OrderPayment) defaultValue(fields()[8]);
        }
        if (customerBuilder != null) {
          record.customer = this.customerBuilder.build();
        } else {
          record.customer = fieldSetFlags()[9] ? this.customer : (com.soaringclouds.avro.order.v1.Customer) defaultValue(fields()[9]);
        }
        record.addresses = fieldSetFlags()[10] ? this.addresses : (java.util.List<com.soaringclouds.avro.order.v1.Address>) defaultValue(fields()[10]);
        if (shippingBuilder != null) {
          record.shipping = this.shippingBuilder.build();
        } else {
          record.shipping = fieldSetFlags()[11] ? this.shipping : (com.soaringclouds.avro.order.v1.Shipping) defaultValue(fields()[11]);
        }
        if (specialDetailsBuilder != null) {
          record.specialDetails = this.specialDetailsBuilder.build();
        } else {
          record.specialDetails = fieldSetFlags()[12] ? this.specialDetails : (com.soaringclouds.avro.order.v1.specialDetails) defaultValue(fields()[12]);
        }
        record.items = fieldSetFlags()[13] ? this.items : (java.util.List<com.soaringclouds.avro.order.v1.Item>) defaultValue(fields()[13]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Order>
    WRITER$ = (org.apache.avro.io.DatumWriter<Order>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Order>
    READER$ = (org.apache.avro.io.DatumReader<Order>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
