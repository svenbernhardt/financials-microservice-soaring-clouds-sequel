/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.soaringclouds.avro.order.v1;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Address extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2427820218913434983L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Address\",\"namespace\":\"com.soaringclouds.avro.order.v1\",\"fields\":[{\"name\":\"name\",\"type\":[\"string\",\"null\"]},{\"name\":\"line1\",\"type\":[\"string\",\"null\"]},{\"name\":\"line2\",\"type\":[\"string\",\"null\"]},{\"name\":\"city\",\"type\":[\"string\",\"null\"]},{\"name\":\"county\",\"type\":[\"string\",\"null\"]},{\"name\":\"postcode\",\"type\":[\"string\",\"null\"]},{\"name\":\"country\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Address> ENCODER =
      new BinaryMessageEncoder<Address>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Address> DECODER =
      new BinaryMessageDecoder<Address>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Address> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Address> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Address>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Address to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Address from a ByteBuffer. */
  public static Address fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence line1;
  @Deprecated public java.lang.CharSequence line2;
  @Deprecated public java.lang.CharSequence city;
  @Deprecated public java.lang.CharSequence county;
  @Deprecated public java.lang.CharSequence postcode;
  @Deprecated public java.lang.CharSequence country;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Address() {}

  /**
   * All-args constructor.
   * @param name The new value for name
   * @param line1 The new value for line1
   * @param line2 The new value for line2
   * @param city The new value for city
   * @param county The new value for county
   * @param postcode The new value for postcode
   * @param country The new value for country
   */
  public Address(java.lang.CharSequence name, java.lang.CharSequence line1, java.lang.CharSequence line2, java.lang.CharSequence city, java.lang.CharSequence county, java.lang.CharSequence postcode, java.lang.CharSequence country) {
    this.name = name;
    this.line1 = line1;
    this.line2 = line2;
    this.city = city;
    this.county = county;
    this.postcode = postcode;
    this.country = country;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return line1;
    case 2: return line2;
    case 3: return city;
    case 4: return county;
    case 5: return postcode;
    case 6: return country;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: line1 = (java.lang.CharSequence)value$; break;
    case 2: line2 = (java.lang.CharSequence)value$; break;
    case 3: city = (java.lang.CharSequence)value$; break;
    case 4: county = (java.lang.CharSequence)value$; break;
    case 5: postcode = (java.lang.CharSequence)value$; break;
    case 6: country = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'line1' field.
   * @return The value of the 'line1' field.
   */
  public java.lang.CharSequence getLine1() {
    return line1;
  }

  /**
   * Sets the value of the 'line1' field.
   * @param value the value to set.
   */
  public void setLine1(java.lang.CharSequence value) {
    this.line1 = value;
  }

  /**
   * Gets the value of the 'line2' field.
   * @return The value of the 'line2' field.
   */
  public java.lang.CharSequence getLine2() {
    return line2;
  }

  /**
   * Sets the value of the 'line2' field.
   * @param value the value to set.
   */
  public void setLine2(java.lang.CharSequence value) {
    this.line2 = value;
  }

  /**
   * Gets the value of the 'city' field.
   * @return The value of the 'city' field.
   */
  public java.lang.CharSequence getCity() {
    return city;
  }

  /**
   * Sets the value of the 'city' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.CharSequence value) {
    this.city = value;
  }

  /**
   * Gets the value of the 'county' field.
   * @return The value of the 'county' field.
   */
  public java.lang.CharSequence getCounty() {
    return county;
  }

  /**
   * Sets the value of the 'county' field.
   * @param value the value to set.
   */
  public void setCounty(java.lang.CharSequence value) {
    this.county = value;
  }

  /**
   * Gets the value of the 'postcode' field.
   * @return The value of the 'postcode' field.
   */
  public java.lang.CharSequence getPostcode() {
    return postcode;
  }

  /**
   * Sets the value of the 'postcode' field.
   * @param value the value to set.
   */
  public void setPostcode(java.lang.CharSequence value) {
    this.postcode = value;
  }

  /**
   * Gets the value of the 'country' field.
   * @return The value of the 'country' field.
   */
  public java.lang.CharSequence getCountry() {
    return country;
  }

  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.CharSequence value) {
    this.country = value;
  }

  /**
   * Creates a new Address RecordBuilder.
   * @return A new Address RecordBuilder
   */
  public static com.soaringclouds.avro.order.v1.Address.Builder newBuilder() {
    return new com.soaringclouds.avro.order.v1.Address.Builder();
  }

  /**
   * Creates a new Address RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Address RecordBuilder
   */
  public static com.soaringclouds.avro.order.v1.Address.Builder newBuilder(com.soaringclouds.avro.order.v1.Address.Builder other) {
    return new com.soaringclouds.avro.order.v1.Address.Builder(other);
  }

  /**
   * Creates a new Address RecordBuilder by copying an existing Address instance.
   * @param other The existing instance to copy.
   * @return A new Address RecordBuilder
   */
  public static com.soaringclouds.avro.order.v1.Address.Builder newBuilder(com.soaringclouds.avro.order.v1.Address other) {
    return new com.soaringclouds.avro.order.v1.Address.Builder(other);
  }

  /**
   * RecordBuilder for Address instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Address>
    implements org.apache.avro.data.RecordBuilder<Address> {

    private java.lang.CharSequence name;
    private java.lang.CharSequence line1;
    private java.lang.CharSequence line2;
    private java.lang.CharSequence city;
    private java.lang.CharSequence county;
    private java.lang.CharSequence postcode;
    private java.lang.CharSequence country;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.soaringclouds.avro.order.v1.Address.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.line1)) {
        this.line1 = data().deepCopy(fields()[1].schema(), other.line1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.line2)) {
        this.line2 = data().deepCopy(fields()[2].schema(), other.line2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.city)) {
        this.city = data().deepCopy(fields()[3].schema(), other.city);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.county)) {
        this.county = data().deepCopy(fields()[4].schema(), other.county);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.postcode)) {
        this.postcode = data().deepCopy(fields()[5].schema(), other.postcode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.country)) {
        this.country = data().deepCopy(fields()[6].schema(), other.country);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Address instance
     * @param other The existing instance to copy.
     */
    private Builder(com.soaringclouds.avro.order.v1.Address other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.line1)) {
        this.line1 = data().deepCopy(fields()[1].schema(), other.line1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.line2)) {
        this.line2 = data().deepCopy(fields()[2].schema(), other.line2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.city)) {
        this.city = data().deepCopy(fields()[3].schema(), other.city);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.county)) {
        this.county = data().deepCopy(fields()[4].schema(), other.county);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.postcode)) {
        this.postcode = data().deepCopy(fields()[5].schema(), other.postcode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.country)) {
        this.country = data().deepCopy(fields()[6].schema(), other.country);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Address.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Address.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'line1' field.
      * @return The value.
      */
    public java.lang.CharSequence getLine1() {
      return line1;
    }

    /**
      * Sets the value of the 'line1' field.
      * @param value The value of 'line1'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Address.Builder setLine1(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.line1 = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'line1' field has been set.
      * @return True if the 'line1' field has been set, false otherwise.
      */
    public boolean hasLine1() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'line1' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Address.Builder clearLine1() {
      line1 = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'line2' field.
      * @return The value.
      */
    public java.lang.CharSequence getLine2() {
      return line2;
    }

    /**
      * Sets the value of the 'line2' field.
      * @param value The value of 'line2'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Address.Builder setLine2(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.line2 = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'line2' field has been set.
      * @return True if the 'line2' field has been set, false otherwise.
      */
    public boolean hasLine2() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'line2' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Address.Builder clearLine2() {
      line2 = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'city' field.
      * @return The value.
      */
    public java.lang.CharSequence getCity() {
      return city;
    }

    /**
      * Sets the value of the 'city' field.
      * @param value The value of 'city'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Address.Builder setCity(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.city = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'city' field has been set.
      * @return True if the 'city' field has been set, false otherwise.
      */
    public boolean hasCity() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'city' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Address.Builder clearCity() {
      city = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'county' field.
      * @return The value.
      */
    public java.lang.CharSequence getCounty() {
      return county;
    }

    /**
      * Sets the value of the 'county' field.
      * @param value The value of 'county'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Address.Builder setCounty(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.county = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'county' field has been set.
      * @return True if the 'county' field has been set, false otherwise.
      */
    public boolean hasCounty() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'county' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Address.Builder clearCounty() {
      county = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'postcode' field.
      * @return The value.
      */
    public java.lang.CharSequence getPostcode() {
      return postcode;
    }

    /**
      * Sets the value of the 'postcode' field.
      * @param value The value of 'postcode'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Address.Builder setPostcode(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.postcode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'postcode' field has been set.
      * @return True if the 'postcode' field has been set, false otherwise.
      */
    public boolean hasPostcode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'postcode' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Address.Builder clearPostcode() {
      postcode = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'country' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountry() {
      return country;
    }

    /**
      * Sets the value of the 'country' field.
      * @param value The value of 'country'.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Address.Builder setCountry(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.country = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'country' field has been set.
      * @return True if the 'country' field has been set, false otherwise.
      */
    public boolean hasCountry() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'country' field.
      * @return This builder.
      */
    public com.soaringclouds.avro.order.v1.Address.Builder clearCountry() {
      country = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Address build() {
      try {
        Address record = new Address();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.line1 = fieldSetFlags()[1] ? this.line1 : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.line2 = fieldSetFlags()[2] ? this.line2 : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.city = fieldSetFlags()[3] ? this.city : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.county = fieldSetFlags()[4] ? this.county : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.postcode = fieldSetFlags()[5] ? this.postcode : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.country = fieldSetFlags()[6] ? this.country : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Address>
    WRITER$ = (org.apache.avro.io.DatumWriter<Address>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Address>
    READER$ = (org.apache.avro.io.DatumReader<Address>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
